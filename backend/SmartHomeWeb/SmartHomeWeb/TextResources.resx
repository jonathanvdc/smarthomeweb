<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="Success" xml:space="preserve">
    <value>Success</value>
  </data>
  <data name="LogIn" xml:space="preserve">
    <value>Log in</value>
  </data>
  <data name="LogOut" xml:space="preserve">
    <value>Log out</value>
  </data>
  <data name="EmptyNameError" xml:space="preserve">
    <value>Names must be non-empty.</value>
  </data>
  <data name="EmptyUserNameError" xml:space="preserve">
    <value>Usernames must be non-empty.</value>
  </data>
  <data name="EmptyPasswordError" xml:space="preserve">
    <value>Passwords must be non-empty.</value>
  </data>
  <data name="BadlyFormattedBirthDateError" xml:space="preserve">
    <value>Your birth date could not be parsed. Have you tried formatting it as 'YYYY/MM/DD'?</value>
  </data>
  <data name="UserNameNotFoundError" xml:space="preserve">
    <value>I couldn't find your username in the database.</value>
  </data>
  <data name="AdminPagesTitle" xml:space="preserve">
    <value>Admin pages</value>
  </data>
  <data name="UsersPageTitle" xml:space="preserve">
    <value>Users</value>
  </data>
  <data name="LocationsPageTitle" xml:space="preserve">
    <value>Locations</value>
  </data>
  <data name="SensorsPageTitle" xml:space="preserve">
    <value>Sensors</value>
  </data>
  <data name="MeasurementsPageTitle" xml:space="preserve">
    <value>Measurements</value>
  </data>
  <data name="MessagesPageTitle" xml:space="preserve">
    <value>Messages</value>
  </data>
  <data name="DashboardPageTitle" xml:space="preserve">
    <value>Dashboard</value>
  </data>
  <data name="FriendsPageTitle" xml:space="preserve">
    <value>Friends</value>
  </data>
  <data name="AddLocationPageTitle" xml:space="preserve">
    <value>Register location</value>
  </data>
  <data name="AddHasLocationPageTitle" xml:space="preserve">
    <value>Add a location to your profile</value>
  </data>
  <data name="AddPersonPageTitle" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="AddLocationPageDescription" xml:space="preserve">
    <value>Register a new location.</value>
  </data>
  <data name="LocationNameLabel" xml:space="preserve">
    <value>Location name</value>
  </data>
  <data name="AddLocationButtonText" xml:space="preserve">
    <value>Register location</value>
  </data>
  <data name="AddLocationNotAuthenticatedText" xml:space="preserve">
    <value>You must log in to register a location.</value>
  </data>
  <data name="LocationAlreadyExistsError" xml:space="preserve">
    <value>There is a pre-existing location called '{0}'.</value>
  </data>
  <data name="PersonAlreadyExistsError" xml:space="preserve">
    <value>Username '{0}' is already taken. ಠ_ಠ</value>
  </data>
  <data name="PasswordMismatchError" xml:space="preserve">
    <value>The passwords you entered did not match.</value>
  </data>
  <data name="AddedLocationMessage" xml:space="preserve">
    <value>The location has been registered!</value>
  </data>
  <data name="AddedPersonMessage" xml:space="preserve">
    <value>Your profile has been created. Thanks for registering!</value>
  </data>
  <data name="PersonUserNameLabel" xml:space="preserve">
    <value>Username</value>
  </data>
  <data name="PersonNameLabel" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="PersonPasswordLabel" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="PersonRepeatPasswordLabel" xml:space="preserve">
    <value>Repeat password</value>
  </data>
  <data name="PersonBirthdateLabel" xml:space="preserve">
    <value>Date of birth</value>
  </data>
  <data name="PersonAddressLabel" xml:space="preserve">
    <value>Address</value>
  </data>
  <data name="PersonCityLabel" xml:space="preserve">
    <value>Area of residence</value>
  </data>
  <data name="PersonZipCodeLabel" xml:space="preserve">
    <value>Zip code</value>
  </data>
  <data name="AddPersonButtonText" xml:space="preserve">
    <value>Create profile</value>
  </data>
  <data name="AcceptFriendRequestButton" xml:space="preserve">
    <value>Accept</value>
  </data>
  <data name="AddFriendButton" xml:space="preserve">
    <value>Add friend</value>
  </data>
  <data name="AddFriendNotAuthenticatedText" xml:space="preserve">
    <value>You must log in to send friend requests.</value>
  </data>
  <data name="AddFriendTitle" xml:space="preserve">
    <value>Add a friend</value>
  </data>
  <data name="AllFriendsLabel" xml:space="preserve">
    <value>All friends</value>
  </data>
  <data name="FriendRequestReceived" xml:space="preserve">
    <value>{0} has sent you a friend request.</value>
  </data>
  <data name="FriendRequestSent" xml:space="preserve">
    <value>Friend request sent.</value>
  </data>
  <data name="FriendUsernameLabel" xml:space="preserve">
    <value>Friend's username</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="PersonGUIDLabel" xml:space="preserve">
    <value>GUID</value>
  </data>
  <data name="PickALocation" xml:space="preserve">
    <value>Pick a location:</value>
  </data>
  <data name="SendFriendRequestButton" xml:space="preserve">
    <value>Send {0} a friend request</value>
  </data>
  <data name="SensorDescriptionLabel" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="SensorIDLabel" xml:space="preserve">
    <value>ID</value>
  </data>
  <data name="SensorLocationLabel" xml:space="preserve">
    <value>Location</value>
  </data>
  <data name="SensorNameLabel" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="SensorNotesLabel" xml:space="preserve">
    <value>Notes</value>
  </data>
  <data name="UserDoesNotExistError" xml:space="preserve">
    <value>That user does not exist.</value>
  </data>
  <data name="ViewFriendsNotLoggedInError" xml:space="preserve">
    <value>You must log in to view your friends.</value>
  </data>
  <data name="WelcomeBody" xml:space="preserve">
    <value>Log, track, and organize your devices' electricity usage. Create graphs of aggregated data and share them with friends.</value>
  </data>
  <data name="WelcomeCreateAccountButton" xml:space="preserve">
    <value>Get started</value>
  </data>
  <data name="WelcomeTitle" xml:space="preserve">
    <value>Welcome to SmartHomeWeb.</value>
  </data>
  <data name="YouAreFriendsWith" xml:space="preserve">
    <value>You are friends with {0}.</value>
  </data>
  <data name="AllMessagesTitle" xml:space="preserve">
    <value>All messages</value>
  </data>
  <data name="DashboardAddLocation" xml:space="preserve">
    <value>add a location</value>
  </data>
  <data name="DashboardAddLocationPost" xml:space="preserve">
    <value>to your profile.</value>
  </data>
  <data name="DashboardAddLocationPre" xml:space="preserve">
    <value>Maybe you should</value>
  </data>
  <data name="EmptyDashboardTitle" xml:space="preserve">
    <value>Seems kind of lonely in here.</value>
  </data>
  <data name="LocationOwnerGuidLabel" xml:space="preserve">
    <value>Owner GUID</value>
  </data>
  <data name="MessageComposerBodyLabel" xml:space="preserve">
    <value>Body</value>
  </data>
  <data name="MessageComposerTitle" xml:space="preserve">
    <value>Send a message</value>
  </data>
  <data name="MessageComposerToLabel" xml:space="preserve">
    <value>To</value>
  </data>
  <data name="MessageHeader" xml:space="preserve">
    <value>{0} wrote:</value>
  </data>
  <data name="MessageIDLabel" xml:space="preserve">
    <value>ID</value>
  </data>
  <data name="MessageMessageLabel" xml:space="preserve">
    <value>Message</value>
  </data>
  <data name="MessageRecipientLabel" xml:space="preserve">
    <value>Recipient</value>
  </data>
  <data name="MessageSenderLabel" xml:space="preserve">
    <value>Sender</value>
  </data>
  <data name="SendMessageNotAuthenticatedText" xml:space="preserve">
    <value>You must log in to send messages.</value>
  </data>
  <data name="MessageSent" xml:space="preserve">
    <value>Message sent.</value>
  </data>
  <data name="Submit" xml:space="preserve">
    <value>Submit</value>
  </data>
  <data name="NewsfeedNoMessages" xml:space="preserve">
    <value>Your news feed is empty.</value>
  </data>
  <data name="NewsfeedPageTitle" xml:space="preserve">
    <value>News Feed</value>
  </data>
  <data name="NoTagsText" xml:space="preserve">
    <value>No tags</value>
  </data>
  <data name="SensorTagsLabel" xml:space="preserve">
    <value>Tags</value>
  </data>
  <data name="WallPageTitle" xml:space="preserve">
    <value>{0}'s Wall</value>
  </data>
  <data name="WallNoMessages" xml:space="preserve">
    <value>This user's wall is empty!</value>
  </data>
  <data name="NewWallPostLabel" xml:space="preserve">
    <value>Put a message on {0}'s wall!</value>
  </data>
  <data name="FriendRequestAccepted" xml:space="preserve">
    <value>Friend request accepted.</value>
  </data>
  <data name="AddTag" xml:space="preserve">
    <value>Add tag</value>
  </data>
  <data name="AddTagNotAuthenticated" xml:space="preserve">
    <value>You need to log in to add a tag.</value>
  </data>
  <data name="AddTagPageTitle" xml:space="preserve">
    <value>Add a tag to a sensor</value>
  </data>
  <data name="PickASensor" xml:space="preserve">
    <value>Pick a sensor</value>
  </data>
  <data name="SensorDoesNotExistError" xml:space="preserve">
    <value>That sensor does not exist.</value>
  </data>
  <data name="TagAdded" xml:space="preserve">
    <value>Tag added!</value>
  </data>
  <data name="TagNameLabel" xml:space="preserve">
    <value>Tag</value>
  </data>
  <data name="NewFriendRequestsLabel" xml:space="preserve">
    <value>New friend requests</value>
  </data>
  <data name="PendingFriendRequestsLabel" xml:space="preserve">
    <value>Pending friend requests</value>
  </data>
  <data name="GroupOverviewNoGroups" xml:space="preserve">
    <value>You aren't a member of any groups yet. Click the button above to make one!</value>
  </data>
  <data name="GroupOverviewPageTitle" xml:space="preserve">
    <value>Groups</value>
  </data>
  <data name="GroupPostHeader" xml:space="preserve">
    <value>Message from {0} to {1}</value>
  </data>
  <data name="GroupProfilePageTitle" xml:space="preserve">
    <value>Group: {0}</value>
  </data>
  <data name="NewGroupDescriptionLabel" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="NewGroupNameLabel" xml:space="preserve">
    <value>Group Name</value>
  </data>
  <data name="GroupProfileNoPosts" xml:space="preserve">
    <value>There are no posts yet by or to users in {0}.</value>
  </data>
  <data name="AddSensor" xml:space="preserve">
    <value>Add sensor</value>
  </data>
  <data name="AddSensorPageTitle" xml:space="preserve">
    <value>Add a sensor</value>
  </data>
  <data name="EditPersonButtonText" xml:space="preserve">
    <value>Edit profile</value>
  </data>
  <data name="EditPersonPageTitle" xml:space="preserve">
    <value>Edit your profile</value>
  </data>
  <data name="LocationDoesNotExist" xml:space="preserve">
    <value>The location does not exist.</value>
  </data>
  <data name="MyProfileTitle" xml:space="preserve">
    <value>My profile</value>
  </data>
  <data name="PasswordPlease" xml:space="preserve">
    <value>Please enter your password</value>
  </data>
  <data name="PersonNewPasswordLabel" xml:space="preserve">
    <value>New password</value>
  </data>
  <data name="PersonRepeatNewPasswordLabel" xml:space="preserve">
    <value>Repeat new password</value>
  </data>
  <data name="SensorAdded" xml:space="preserve">
    <value>Sensor '{0}' added!</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="Sensorsfromuser" xml:space="preserve">
    <value>My sensors</value>
  </data>
  <data name="EditSensorPageTitle" xml:space="preserve">
    <value>Edit this Sensor</value>
  </data>
  <data name="EditSensorButtonText" xml:space="preserve">
    <value>Update Sensor</value>
  </data>
  <data name="LocationsAdminPageTitle" xml:space="preserve">
    <value>Manage locations</value>
  </data>
  <data name="SensorsAdminPageTitle" xml:space="preserve">
    <value>Manage sensors</value>
  </data>
  <data name="UsersAdminPageTitle" xml:space="preserve">
    <value>Manage users</value>
  </data>
  <data name="UpdateSensorLabel" xml:space="preserve">
    <value>Edit sensor</value>
  </data>
  <data name="EditedSensorSuccess" xml:space="preserve">
    <value>Edited sensor!</value>
  </data>
  <data name="IDLabel" xml:space="preserve">
    <value>ID</value>
  </data>
  <data name="ProfileEditSuccess" xml:space="preserve">
    <value>Your profile has been updated!</value>
  </data>
  <data name="GraphTitle" xml:space="preserve">
    <value>Graph</value>
  </data>
  <data name="RangeSelectorTitle" xml:space="preserve">
    <value>Range select</value>
  </data>
  <data name="SensorSelectorTitle" xml:space="preserve">
    <value>Sensor select</value>
  </data>
  <data name="TagSelectorTitle" xml:space="preserve">
    <value>Tag select</value>
  </data>
  <data name="Loading" xml:space="preserve">
    <value>Loading...</value>
  </data>
  <data name="NoSensorData" xml:space="preserve">
    <value>No data for that sensor or period</value>
  </data>
  <data name="NoSensorDataHelpText" xml:space="preserve">
    <value>Select a different time period using the input above, or select a different sensor from the list on the rigth.</value>
  </data>
  <data name="NoSensorSelected" xml:space="preserve">
    <value>No sensor selected</value>
  </data>
  <data name="NoSensorSelectedHelpText" xml:space="preserve">
    <value>Select a sensor from the list on the right.</value>
  </data>
</root>