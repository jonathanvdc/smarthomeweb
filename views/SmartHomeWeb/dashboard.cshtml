@using System
@using System.Collections.Generic
@using Nancy.Security
@using SmartHomeWeb
@using SmartHomeWeb.Model
@using Nancy.ViewEngines.Razor
@inherits NancyRazorViewBase<List<LocationWithSensors>>
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>


<script type="text/javascript">
	function updatesensordescription(x){
		var xmlhttp = new XMLHttpRequest();
		var url = "/api/sensors/" + x.toString();
		xmlhttp.open("GET", url, false);
		xmlhttp.send();
		var response = JSON.parse(xmlhttp.responseText);
		var newdescription = prompt("New description", response.data.description);
		response.data.description = newdescription;
		var xhr = new XMLHttpRequest();
		xhr.open('PUT', "/api/sensors/");
		xhr.setRequestHeader('Content-Type', 'application/json');
		xhr.send(JSON.stringify(response));

		// Assume that the database has been updated correctly,
		// and update the element's description in the UI.
		var el = document.getElementById(x + "-description");
		while (el.firstChild)
		    // Remove all the things.
		    el.removeChild(el.firstChild);

		 el.appendChild(document.createTextNode(newdescription));
	}
</script>

<h2>@TextResources.MeasurementsPageTitle</h2>

@if (@Model.Count == 0)
{
    <h3>@TextResources.EmptyDashboardTitle</h3>
    <div>
	    @TextResources.DashboardAddLocationPre
	    <a href="/add-has-location">@TextResources.DashboardAddLocation</a>
        @TextResources.DashboardAddLocationPost
    </div>
}
else
{
    <div class="container col-sm-12">
        <ul class="nav nav-tabs col-sm-12">
	    @for(var x = 0; x < @Model.Count; ++x)
		{
		  <li @(x == 0 ? Html.Raw("class=\"active\"") : Html.Raw(""))><a data-toggle="tab" href="#u_@x">@Model[@x].Location.Data.Name</a></li>
		}
		</ul>
		<div style="margin: 5px;" class="col-sm-12">
		<ul style="margin: 5px;" class="nav nav-pills">
		  <li class="active" onClick='measurementsGraph.setFrame("minutes")'><a href="#" data-toggle="tab">Minutes</a></li>
		  <li onClick='measurementsGraph.setFrame("hours")'><a href="#" data-toggle="tab">Hours</a></li>
		  <li onClick='measurementsGraph.setFrame("days")'><a href="#" data-toggle="tab">Days</a></li>
		  <li onClick='measurementsGraph.setFrame("months")'><a href="#" data-toggle="tab">Months</a></li>
		</ul>

		<table>
		  <tr>
		    <td>From:</td><td><input id="date1" type="datetime" value="2016-04-20T12:00"></td>
		  </tr>
		  <tr>
		    <td>To:</td><td><input id="date2" type="datetime" value="2016-04-20T13:00"></td>
		  </tr>
		</table>
		<button onClick='measurementsGraph.drawcustomChart()'>Submit</button>
		</div>
		<div class="col-sm-8">
			@Html.Partial("graph.cshtml")
		</div>
		<div class="tab-content col-sm-4">
		@for (int x = 0; x < @Model.Count; ++x)
		{
		  <div id="u_@x" class="tab-pane fade @(x == 0 ? "in active" : "")" style="height: 55%; overflow:auto;">
			<ul class="nav nav-pills nav-stacked">
				@foreach (var y in @Model[x].Sensors)
				{
				  <li id="@y.Id" onClick="measurementsGraph.setId(this.id)">
				      <a>
							    <div>
				              @y.Data.Name
				              <span class="glyphicon glyphicon-cog" style="float: right;" onClick="updatesensordescription(@y.Id)" />
                  </div>
									<div id="@(y.Id)-description" class="sensor-desciption">
				              @y.Data.Description
				          </div>
				      </a>
			      </li>
				}
			</ul>
		  </div>
		}
		</div>
    </div>
}
